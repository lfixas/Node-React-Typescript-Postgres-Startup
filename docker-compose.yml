services:
    postgres:
        container_name: postgres
        image: postgres:15-alpine
        working_dir: /app
        restart: unless-stopped
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        ports:
            - "5432:5432"
        volumes:
            - ./data/postgres:/var/lib/postgresql/data
    
    pgadmin:
        container_name: pgadmin
        image: dpage/pgadmin4:latest
        restart: unless-stopped
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        ports:
            - "5050:80"
        depends_on:
            - postgres
    
    client:
        container_name: client
        build:
            context: ./client
            dockerfile: Dockerfile
        restart: unless-stopped
        ports:
            - "3000:3000"
        volumes:
            - ./client:/app/client
            - /app/node_modules
        environment:
            WATCHPACK_POLLING: "true"
            REACT_APP_API_URL: ${REACT_APP_API_URL}
    
    server:
        container_name: server
        build:
            context: ./server
            dockerfile: Dockerfile
        restart: unless-stopped
        ports:
            - "4000:4000"
        volumes:
            - ./server:/app/server
            - /app/node_modules
        environment:
            DATABASE_URL: ${DATABASE_URL}
            SECRET_KEY: ${SECRET_KEY}
            PORT: ${PORT}